% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrate.R
\name{cem_overlap}
\alias{cem_overlap}
\title{Integrates CEMiTool analyses}
\usage{
cem_overlap(analyses, num_studies = 0, desired_table = "adjacency",
  verbose = TRUE)
}
\arguments{
\item{analyses}{List of objects of class \code{CEMiTool}}

\item{num_studies}{The minimum number of objects in the \code{analyses} list in
which an edge pair must be present to be selected (default = 0)}

\item{desired_table}{Character string indicating the type of output to be returned.
Default: 'adjacency'.}

\item{verbose}{Logical. If \code{TRUE}, reports analysis steps.}
}
\value{
Object of class \code{data.frame} containing edgelist describing common
edges between the networks defined in module slots from the input objects
}
\description{
Returns the occurrence of edges between different analyses
}
\details{
The method assumes that all genes inside each module are connected to
every other gene from the same module. Argument desired_table must be one of
\code{spearman} (returns Spearman's rho), \code{pearson} (Pearson's R),
\code{b_correlations} (returns adjacency list defined in CEMiTool object),
\code{adjacency} (returns discretized edges)
}
\examples{
\dontrun{
# Run the cemitool function twice on expr dataset. Each time, one sample will be removed
data(expr0)
set.seed(10)
dset1 <- expr0[,-sample(1:ncol(expr0), 1)]
dset2 <- expr0[,-sample(1:ncol(expr0), 1)]
cem1 <- cemitool(dset1, plot=FALSE)
cem2 <- cemitool(dset2, plot=FALSE)
cem_overlap_df <- cem_overlap(list(cem1, cem2))
}
}
